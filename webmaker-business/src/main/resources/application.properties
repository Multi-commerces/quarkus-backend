jakarta.faces.PROJECT_STAGE=Production
jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT=true

#Disabling SSL verifications
quarkus.ssl.native=false
quarkus.tls.trust-all=true
%dev.quarkus.oidc.tls.verification=none

# laposte-api
laposte-api/mp-rest/url=http://api.laposte.fr 
laposte-api/mp-rest/scope=javax.inject.Singleton
laposte-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier

##################################### HTTP configuration ##############################################
quarkus.http.port=8081
quarkus.http.host=0.0.0.0

# Cela vous permet d'exécuter des tests tout en exécutant l'application en parallèle.
quarkus.http.test-port=8083
quarkus.http.test-ssl-port=8446
quarkus.http.test-timeout=10s

quarkus.default-locale=fr-FR
quarkus.locales=fr-FR,en-US,es-ES

# CORS
quarkus.http.cors=false
quarkus.http.cors.methods=GET,PUT,POST,PATCH,DELETE,OPTIONS
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
%dev.quarkus.http.cors.origins=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8081,http://127.0.0.1:8081,http://localhost:5000,http://127.0.0.1:5000


#GZip Support
#quarkus.resteasy.gzip.enabled=true
#quarkus.resteasy.gzip.max-input=10M

##################################### CACHE (hazelcast) ##############################################
# Cache hazelcast - Activation du cache avec decoration du/des service(s) manager)
#quarkus.hazelcast-client.cluster-members=localhost:5701

# Decoration du/des service(s) manager avec les alternatives pour mise en cache
# Mise en place non fini (desactivation temporaire)
# Match beans où se trouve le package des classes (cache decorator manager)
# La priorité déclarée via @Priorityou @AlternativePriority est remplacée par Integer#MAX_VALUE
# Commenter la ligne ci-dessous afin d'utiliser les alternatives manager pour des appels direct à la bdd 
#quarkus.arc.selected-alternatives=fr.commerces.hazelcast.alternatives.*

################################# OpenID Connect (keycloak) ###########################################
# OpenID Connect - config par defaut
#indiquer à Quarkus que vous souhaitez activer le flux de code d'autorisation OpenID Connect, 
#afin que vos utilisateurs soient redirigés vers le fournisseur OpenID Connect pour s'authentifier.
#quarkus.oidc.application-type=web-app
%dev.quarkus.oidc.auth-server-url=http://192.168.1.29:8080/auth/realms/multi-commerces

quarkus.oidc.auth-server-url=http://192.168.1.29:8080/auth/realms/multi-commerces
quarkus.oidc.client-id=backend-services
quarkus.oidc.credentials.secret=474b03a4-98ae-4943-8221-83945054f864


#Tous les chemins sont protégés 
#quarkus.http.auth.permission.authenticated.paths=/*
#quarkus.http.auth.permission.authenticated.policy=authenticated

# propagateHeaders
#org.eclipse.microprofile.rest.client.propagateHeaders=Authorization,Proxy-Authorization


#################################### SWAGGER ###########################################
quarkus.swagger-ui.path=/openapi/ui
quarkus.smallrye-openapi.path=/openapi

#################################### LOG ###########################################
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %X %s%n
quarkus.log.console.level=INFO

# Logger - config dev
quarkus.log.console.level=FINE
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] %X %s%e%n

quarkus.log.level=WARN
quarkus.log.category."io.quarkus".level=WARN
#quarkus.log.category."io.quarkus.smallrye.jwt".level=TRACE
#quarkus.log.category."io.undertow.request.security".level=TRACE
quarkus.log.category."org.hibernate".level=WARN
quarkus.log.category."fr.commerces".level=FINE

quarkus.log.console.enable=true
quarkus.log.console.color=true

#################################### FLYWAY, DATA SOURCE, HIBERNATE, POSTGRESQL ###########################################
#quarkus.datasource.jdbc.url="jdbc:postgresql://"${POSTGRESQL_ADDON_HOST}":"${POSTGRESQL_ADDON_PORT}"/"${POSTGRESQL_ADDON_DB}""
#quarkus.datasource.username="${POSTGRESQL_ADDON_USER}"
#quarkus.datasource.password="${POSTGRESQL_ADDON_PASSWORD}"
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://192.168.1.29:5435/multicommerces
quarkus.datasource.username=postgres_user
quarkus.datasource.password=postgres_pwd
quarkus.datasource.jdbc.min-size=4
quarkus.datasource.jdbc.max-size=10
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=insert_product.sql
# FLYWAY (gestion version bdd)
quarkus.flyway.baseline-on-migrate=false
quarkus.flyway.migrate-at-start=false

%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5435/multicommerces
%dev.quarkus.datasource.username=postgres_user
%dev.quarkus.datasource.password=postgres_pwd
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=insert_product.sql
%dev.quarkus.flyway.baseline-on-migrate=false
%dev.quarkus.flyway.migrate-at-start=false

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
%test.quarkus.datasource.username =sa
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script=insert_product.sql
%test.quarkus.flyway.baseline-on-migrate=false
%test.quarkus.flyway.migrate-at-start=false
%test.quarkus.hibernate-orm.sql-load-script = no-file

quarkus.datasource.jdbc.pooling-enabled=true
quarkus.datasource.jdbc.acquisition-timeout=10

#################################### PERSO ###########################################
storage.tinify.setKey=g2Wc6QY7CFzvyt2qskysZFvkNJ2ZHq88
storage.location=/home/njlg6500/workspace/jilari/webmaker/webmaker-business/src/test/resources/images


quarkus.native.additional-build-args =\
    -J-Dorg.jboss.resteasy.microprofile.defaultToURLConnectionHttpClient=true









